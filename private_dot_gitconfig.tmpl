[alias]
	# Previously used legit: https://github.com/frostming/legit

	# Snippet from: https://github.com/roaminsight/matt-dotfiles/blob/master/.bash_prompt
    recent = for-each-ref --sort=-committerdate --count=10 --format='%(refname:short)' refs/heads/

    # Snippets from: https://github.com/ornicar/dotfiles/blob/7f0940aa42b7c79771ad1fe31be21cd49827f161/gitconfig#L55-L74
	# Show list of contributors in descending order by number of commits
	rank = shortlog -sn --no-merges
	# Given any git object, try to show it briefly
	whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short
	# Add modified files to previous commit
	oups = !"git add -A -v && git commit --amend -C HEAD"
	# Nice logs
	l = log --decorate --graph --date=short --pretty=\"format:%C(blue)%ad%Creset %C(yellow)%h%C(green)%d%Creset %C()%s %C(black) [%an]%Creset\"
	changes = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\" --name-status
	mini = log --pretty=format:\"%h\"
	short = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\"
	changelog = log --pretty=format:\" * %s\"
	shortnocolor = log --pretty=format:\"%h %cr %cn %s\"
	# Recent Branches
	recent-branches = branch --sort=-committerdate --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'

	# From old Alfred Snippets
	pretty-1 = log --graph --pretty=format:'%Cred%h%Creset %an: %s - %Creset %C(yellow)%d%Creset %Cgreen(%cr)%Creset' --abbrev-commit --date=relative
	pretty-2 = log --remotes --tags --oneline --decorate --stat --abbrev-commit --date=relative --branches --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset%n'

	# `gdiff`
	# > git diff --color | sed "s/^\([^-+ ]*\)[-+ ]/\\1/" | less -r
	# `comp`
	# > https://github.com/<org>/<repo>/compare/@<tag>..master@cursor?expand=1

[branch]
    sort = -committerdate
[color]
	ui = true
[column]
    ui = auto
[commit]
	gpgsign = true
[credential]
	helper = osxkeychain
[core]
	attributesfile = {{ .chezmoi.homeDir }}/.gitattributes_global
	autocrlf = input
	# editor = subl --wait --add
	editor = nvim
	eol = lf
	excludesfile = {{ .chezmoi.homeDir }}/.gitignore_global
	pager = difft --color=always
[diff]
    external = difft
    tool = difftastic
[diff "image"]
    textconv = wezterm imgcat
    command = {{ .chezmoi.homeDir }}/.local/bin/imgdiff.sh
[difftool]
    prompt = false
[difftool "difftastic"]
    cmd = difft "$LOCAL" "$REMOTE"
[filter "hawser"]
	clean = git hawser clean %f
	required = true
	smudge = git hawser smudge %f
[filter "lfs"]
	clean = git-lfs clean -- %f
	process = git-lfs filter-process
	required = true
	smudge = git-lfs smudge -- %f
[filter "media"]
	clean = git media clean %f
	required = true
	smudge = git media smudge %f
[gpg]
	program = {{ .github.gpg_program }}
[init]
	defaultBranch = main
[pager]
    difftool = true
[pull]
	ff = only
[push]
	default = simple
[rerere]
    # Remembers conflict resolution
    enabled = true
[tag]
	forceSignAnnotated = true
[user]
	name = Kyle King
	email = {{ .github.email }}
	signingkey = {{ .github.signing_key }}
[include]
	# FYI: An alternative approach is to use 'includeIf' (example: https://blog.jannikwempe.com/git-config-includes#heading-overriding-git-configuration-for-some-repositories)
	path = .ailabs.gitconfig
# FYI: `git maintenance start` can speed up git operations by running cron tasks for large and active repos (https://git-scm.com/docs/git-maintenance)
